var product = [{
    id: 1,
    img: 'img/moon.jpg',
    name: '‡∏î‡∏ß‡∏á‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå',
    price: 500,
    description: '‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß‡∏Ç‡∏ô‡∏≤‡∏î‡∏à‡∏¥‡πã‡∏ß ‡∏°‡∏µ‡πÄ‡∏™‡πâ‡∏ô‡∏ú‡πà‡∏≤‡∏®‡∏π‡∏ô‡∏ç‡πå‡∏Å‡∏•‡∏≤‡∏á 50 cm.',
    type: 'toy',
    sale: '0'
},{
    id:2,
    img:'img/shoot.avif',
    name:'‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏≠‡∏î‡∏¥‡∏î‡∏≤‡∏™',
    price: 7500,
    description:'‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏•‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß',
    type:'shoe',
    sale: '0'
},{
    id:3,
    img:'img/labtop.jpg',
    name:'‡πÇ‡∏ô‡πä‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ',
    price: 145000,
    description:'‡πÇ‡∏ô‡πä‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡πÅ‡∏•‡∏∞‡πÅ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°',
    type:'electronic',
    sale: '0'
}];

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
$(document).ready(() => {
    var html = '';
    for (let i = 0; i < product.length; i++){
        html += `<div onclick="open_detail(${i})" class="product-items ${product[i].type}">
            <img class="product-img" src="${product[i].img}" alt="" />
            <p class="product-name">${product[i].name}</p>
            <p class="product-title">${product[i].description}</p>
            <div class="product-sale_price">
              <p class="product-price">${numberWithCommas(product[i].price)} ‡∏ö‡∏≤‡∏ó</p>
              <p class="product-sale">‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß${product[i].sale} ‡∏ä‡∏¥‡πâ‡∏ô</p>
            </div>
          </div>`;
    }
    $("#productlist").html(html);
})
// ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡∏à‡∏∏‡∏î‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
function numberWithCommas(x) {
    x = x.toString();
    var pattern = /(-?\d+)(\d{3})/;
    while (pattern.test(x))
        x = x.replace(pattern, "$1,$2");
    return x;
}
// ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î ‡∏à‡∏∏‡∏î‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function searchsomthing(elem){
    var value = $('#'+elem.id).val()
    console.log(value)

    var html = '';
    for (let i = 0; i < product.length; i++){
        if( product[i].name.includes(value) ) {
            html += `<div onclick="open_detail(${i})" class="product-items ${product[i].type}">
            <img class="product-img" src="${product[i].img}" alt="" />
            <p class="product-name">${product[i].name}</p>
            <p class="product-title">${product[i].description}</p>
            <div class="product-sale_price">
              <p class="product-price">${numberWithCommas(product[i].price)} ‡∏ö‡∏≤‡∏ó</p>
              <p class="product-sale">‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß${product[i].sale} ‡∏ä‡∏¥‡πâ‡∏ô</p>
            </div>
          </div>`;
        }
    }
    if(html == ''){
        $("#productlist").html('<p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</p>')
    }else{
        $("#productlist").html(html);
    }
}
// ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤

// // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function searchproduct(param){
    console.log(param);
    $(".product-items").css('display', 'none');
    if(param == 'All'){
        $(".product-items").css('display', 'block')
    }
    else{
        $("."+param).css('display', 'block')
    }
}
// // ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤

// ‡πÄ‡∏£‡∏¥‡πà‡∏° ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î
var productindex = 0;
function open_detail(index){
    productindex = index;
    console.log(productindex)
    $("#modal_desc").css('display', 'flex')
    $("#mdd-img").attr('src',product[index].img);
    $("#mdd-name").text(product[index].name);
    $("#mdd-price").text(numberWithCommas(product[index].price +' ‡∏ö‡∏≤‡∏ó '))
    $("#mdd-desc").text(product[index].description);
}
function closeModal1(){
    $(".modal").css('display', 'none')
}
// ‡∏à‡∏ö ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î

// ‡πÄ‡∏£‡∏¥‡πà‡∏° ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
var cart = [];
var record = []; 

function addtocart() {
    var pass = true;

    for (let i = 0; i < cart.length; i++) {
        if (productindex == cart[i].index) {
            cart[i].count++;
            pass = false;
        }
    }

    if (pass) {
        var obj = {
            index: productindex,
            id: product[productindex].id,
            name: product[productindex].name,
            price: product[productindex].price,
            img: product[productindex].img,
            count: 1
        };
        cart.push(obj);
    }

    Swal.fire({
        icon: 'success',
        title: '‡πÄ‡∏û‡∏¥‡πà‡∏° ' + product[productindex].name + ' ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤!'
    });

    updateCartCount();
    rendercart();
}

// üî• ‡πÅ‡∏Å‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏° `sale` ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ã‡∏∑‡πâ‡∏≠
function buyProduct() {
    for (let i = 0; i < cart.length; i++) {
        let productID = cart[i].id;
        let productIndex = product.findIndex(p => p.id === productID);

        if (productIndex !== -1) {
            product[productIndex].sale = (parseInt(product[productIndex].sale) + cart[i].count).toString();
        }

        record.push({ ...cart[i] });
    }

    updateProductSale();
    cart = []; // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
    updateCartCount();
    rendercart();
    renderrecord();

    Swal.fire({
        icon: 'success',
        title: '‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!'
    });

    closeModal();
}



// ‡∏à‡∏ö ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤


// ‡πÄ‡∏£‡∏¥‡πà‡∏° ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function opencart(){
    $('#modalcart').css('display','flex')
    rendercart();
}
// ‡∏õ‡∏¥‡∏î ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤

// ‡πÄ‡∏£‡∏¥‡πà‡∏° ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
function rendercart(){
    if(cart.length > 0){
        var html = '';
        for(var i=0; i<cart.length; i++){
            html += `<div class="cartlist-items">
            <div class="cartlist-left">
              <img src="${cart[i].img}" alt="">
              <div class="cartlist-detail">
                <p style="font-size: 1.5vw;">${cart[i].name}</p>
                <p style="font-size: 1.2vw;">${numberWithCommas(cart[i].price * cart[i].count)} ‡∏ö‡∏≤‡∏ó</p>
              </div>
            </div>
            <div class="cartlist-right">
              <p onclick="deinitems('-',${i})" class="btnc">-</p>
              <p id="countitems${i}" style="margin: 0 10px;">${cart[i].count}</p>
              <p onclick="deinitems('+',${i})" class="btnc">+</p>
            </div>
          </div>
          `;
        }
        $("#mycart").html(html)
    }
    else{
        $("#mycart").html(`<p style="font-size: 2vw;"> ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ </p><br><div id="mycart" class="cartlist">
          
        `)
    }
}
// ‡∏õ‡∏¥‡∏î ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤

// ‡πÄ‡∏£‡∏¥‡πà‡∏° ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
function deinitems(action, index) {
    if(action == '-'){
        if(cart[index].count > 0){
            cart[index].count--;
            $("#countitems"+index).text(cart[index].count)

            if(cart[index].count <= 0){
                Swal.fire({
                    icon: 'warning',
                    title: '‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤?',
                    showConfirmButton: true,
                    showCancelButton: true,
                    confirmButtonText: '‡∏•‡∏ö',
                    cancelButtonText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'         
                }).then((res) =>{
                    if(res.isConfirmed){
                        cart.splice(index, 1);
                        rendercart();
                        renderrecord();  // üî• ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
                        updateCartCount();
                    } else {
                        cart[index].count++;
                        $("#countitems"+index).text(cart[index].count);
                    }
                })
            }
        }
    } else if(action == '+'){
        cart[index].count++;
        $("#countitems"+index).text(cart[index].count);
    }
    renderrecord();  // üî• ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
    updateCartCount();
}




// ‡πÄ‡∏£‡∏¥‡πà‡∏° ‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
function openrecord(){
    $('#record').css('display','flex')
    rendercart();
}
function closereocrd(){
    $(".record").css('display', 'none')
}
// ‡∏õ‡∏¥‡∏î ‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥

// ‡πÄ‡∏õ‡∏¥‡∏î ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function renderrecord(){
    if(record.length > 0){
        var html = '';
        for(var i=0; i<record.length; i++){
            html += `<div class="recordlist-items">
          <div class="record-left">
            <img src="${record[i].img}" alt="">
            <div class="recordlist-detail">
              <p style="font-size: 1.5vw;"> ${record[i].name}</p>
              <p style="font-size: 1.2vw;"> ${numberWithCommas(record[i].price * record[i].count)} ‡∏ö‡∏≤‡∏ó</p>
            </div>
          </div>
          <div class="record-right">
            <p class="right_text">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô </p>
            <p style="margin: 0 10px">${record[i].count}</p>
            <p class="right_text"> ‡∏ä‡∏¥‡πâ‡∏ô</p>
          </div>
        </div>
          `;
        }
        $("#myrecord").html(html)
    }
    else{
        $("#myrecord").html(`<p> ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ </p>`);
    }
}

// ‡∏õ‡∏¥‡∏î ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏É

function updateCartCount() {
    let totalCount = cart.reduce((sum, item) => sum + item.count, 0);
    if (totalCount > 0) {
        $("#cartcount").css('display', 'flex').text(totalCount);
    } else {
        $("#cartcount").css('display', 'none');
    }
}


function updateProductSale() {
    for (let i = 0; i < product.length; i++) {
        $(".product-items").eq(i).find(".product-sale").text("‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß " + product[i].sale + " ‡∏ä‡∏¥‡πâ‡∏ô");
    }
}


// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡∏≤‡∏¢ (product.sale)
// ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä UI ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢‡∏à‡∏£‡∏¥‡∏á
function buyProduct() {
    for (let i = 0; i < cart.length; i++) {
        let productID = cart[i].id;
        let productIndex = product.findIndex(p => p.id === productID);
        
        if (productIndex !== -1) {
            product[productIndex].sale = (parseInt(product[productIndex].sale) + cart[i].count).toString();
        }

        // üî• ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡πÉ‡∏ô record ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°
        record.push({ ...cart[i] });
    }

    updateProductSale();
    cart = []; // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
    updateCartCount();
    rendercart();
    renderrecord(); // üî• ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠

    Swal.fire({
        icon: 'success',
        title: '‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!'
    });

    closeModal();
}
